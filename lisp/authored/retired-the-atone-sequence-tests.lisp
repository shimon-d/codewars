;;;; RETIRED

(defpackage #:challenge/tests/solution
  (:use #:cl
        #:rove
        #:challenge/solution))
(in-package #:challenge/tests/solution)


(defparameter *my-random-value* 0)

(defun solution (pos)
  (parse-integer (make-string pos :initial-element #\1) :radix 2))


(deftest atone
  (testing "Small values"
    (ok (= (atone 1) 1))
    (ok (= (atone 2) 3))
    (ok (= (atone 3) 7))
    (ok (= (atone 4) 15))
    (ok (= (atone 5) 31))
    (ok (= (atone 6) 63))
    (ok (= (atone 7) 127))
    (ok (= (atone 8) 255))
    (ok (= (atone 9) 511))
    (ok (= (atone 10) 1023))
  (testing "Big values"
    (ok (= (atone 100) 1267650600228229401496703205375))
    (ok (= (atone 200) 1606938044258990275541962092341162602522202993782792835301375))
    (ok (= (atone 300) 2037035976334486086268445688409378161051468393665936250636140449354381299763336706183397375))
    (ok (= (atone 400) 2582249878086908589655919172003011874329705792829223512830659356540647622016841194629645353280137831435903171972747493375))
    (ok (= (atone 500) 3273390607896141870013189696827599152216642046043064789483291368096133796404674554883270092325904157150886684127560071009217256545885393053328527589375))
    (ok (= (atone 600) 4149515568880992958512407863691161151012446232242436899995657329690652811412908146399707048947103794288197886611300789182395151075411775307886874834113963687061181803401509523685375))
    (ok (= (atone 700) 5260135901548373507240989882880128665550339802823173859498280903068732154297080822113666536277588451226982968856178217713019432250183803863127814770651880849955223671128444598191663757884322717271293251735781375))
    (ok (= (atone 800) 6668014432879854274079851790721257797144758322315908160396257811764037237817632071521432200871554290742929910593433240445888801654119365080363356052330830046095157579514014558463078285911814024728965016135886601981690748037476461291163877375))
    (ok (= (atone 900) 8452712498170643941637436558664265704301557216577944354047371344426782440907597751590676094202515006314790319892114058862117560952042968596008623655407033230534186943984081346699704282822823056848387726531379014466368452684024987821414350380272583623832617294363807973375))
    (ok (= (atone 1000) 10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914571196477686542167660429831652624386837205668069375))
  (testing "Random values"
    (dotimes (i 10)
      (let ((random-value (random 10000)))
      (ok (= (atone random-value) (solution random-value)))))))))
